{"version":3,"sources":["user/UserContext.js","job/JobCard.js","job/JobsCardList.js","api.js","Search.js","job/Jobs.js","user/LoginForm.js","user/SignupForm.js","user/ProfileForm.js","HomePage.js","company/CompanyCard.js","company/CompanyList.js","company/CompanyDetail.js","ProtectedRoute.js","Routes.js","Navigation.js","useLocalStorage.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","React","createContext","JobCard","id","title","salary","equity","companyName","useContext","hasAppliedToJob","applyToJob","useState","applied","setApplied","useEffect","handleApply","e","a","className","toLocaleString","onClick","disabled","JobCardList","jobs","apply","map","j","comapnyName","BASE_URL","process","JoblyApi","endpoint","data","method","console","debug","url","headers","Authorization","token","params","axios","error","response","message","alert","Array","isArray","handle","this","request","res","company","name","companies","username","user","Search","search","formData","setFormData","onSubmit","preventDefault","trim","undefined","placeholder","value","onChange","target","type","Jobs","setJobs","allJobs","setAllJobs","appliedJobs","filtered","setFiltered","searchJobs","getJobs","checked","filter","has","length","JobsCardList","LoginForm","login","password","history","useHistory","handleChange","i","handleSubmit","success","push","htmlFor","required","SignupForm","signup","firstName","lastName","email","ProfileForm","curUser","setCurUser","changed","setChanged","saveUser","f","HomePage","to","CompanyCard","description","logoUrl","src","alt","Companies","setCompanies","searchCompanies","getCompanies","c","CompanyDetail","useParams","setCompany","getCompany","getDetails","ProtectedRoute","exact","path","children","Routes","CompanyList","Navigation","logout","useLocalStorage","key","initVal","localStorage","getItem","item","setItem","removeItem","App","setToken","Set","setAppliedJobs","userLoaded","setUserLoaded","jwt","decode","getUser","resUser","applications","getCurUser","inputData","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a482b95.chunk.js","sourcesContent":["import React from \"react\";\n\nconst UserContext = React.createContext();\n\nexport default UserContext;","import React, { useContext, useState, useEffect } from \"react\";\nimport UserContext from \"../user/UserContext\";\nimport \"./job.css\"\n\nconst JobCard = ({id, title, salary, equity, companyName}) => {\n    const {hasAppliedToJob, applyToJob} = useContext(UserContext);\n    const [applied, setApplied] = useState();\n    \n    useEffect(function updateApplied(){\n        setApplied(hasAppliedToJob(id));\n    }, [id, hasAppliedToJob]);\n\n    const handleApply = async (e) => {\n        if (hasAppliedToJob(id)) return;\n        applyToJob(id);\n        setApplied(true);\n    }\n\n    return (\n        <div className=\"JobCard\">\n            <h4>{title}</h4>\n            <p>{companyName}</p>\n            {salary && <p>Salary: {salary.toLocaleString()}</p>}\n            {equity && <p>Equity: {equity}</p>}\n            <button onClick={handleApply} disabled={applied}>{applied ? \"Applied\" : \"Apply\"}</button>\n        </div>\n    )\n}\n\nexport default JobCard;","import React from \"react\";\nimport JobCard from \"./JobCard\";\n\nconst JobCardList = ({jobs, apply}) => {\n    return (\n        <div className=\"JobList\">\n            {jobs.map(j => (\n                <JobCard \n                    key={j.id}\n                    id={j.id}\n                    title={j.title}\n                    salary={j.salary}\n                    equity={j.equity}\n                    comapnyName={j.companyName}\n                />\n            ))}\n        </div>\n    )\n}\n\nexport default JobCardList;","import axios from \"axios\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nclass JoblyApi {\n  // the token for interactive with the API will be stored here.\n  static token;\n\n  static async request(endpoint, data = {}, method = \"get\") {\n    console.debug(\"API Call:\", endpoint, data, method);\n\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = { Authorization: `Bearer ${JoblyApi.token}` };\n    const params = (method === \"get\")\n        ? data\n        : {};\n\n    try {\n      return (await axios({ url, method, data, params, headers })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      alert(message);\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  // Individual API routes\n\n  /** Get details on a company by handle. */\n\n  static async getCompany(handle) {\n    let res = await this.request(`companies/${handle}`);\n    return res.company;\n  }\n\n  static async getCompanies(name) {\n    let res = await this.request(`companies`, {name});\n    return res.companies;\n  }\n\n  static async getUser(username) {\n    let res = await this.request(`users/${username}`);\n    return res.user;\n  }\n\n  static async getJobs(title) {\n    let res = await this.request(`jobs`, {title});\n    return res.jobs;\n  }\n\n  static async saveUser(username, data) {\n    let res = await this.request(`users/${username}`, data, \"patch\");\n    return res.user;\n  }\n\n  static async login(data) {\n    let res = await this.request(`auth/token`, data, \"post\");\n    return res.token;\n  }\n\n  static async signup(data) {\n    let res = await this.request(`auth/register`, data, \"post\");\n    return res.token;\n  }\n\n  static async applyToJob(username, id) {\n    await this.request(`users/${username}/jobs/${id}`, {}, \"post\");\n  }\n}\n\nexport default JoblyApi;","import React, {useState} from \"react\";\nimport \"./search.css\";\n\nconst Search = ({search}) => {\n    const [formData, setFormData] = useState(\"\");\n\n    const handleChange = (e) => {\n        setFormData(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        search(formData.trim() || undefined);\n        setFormData(formData.trim());\n    }\n\n    return (\n        <div className=\"Search\">\n            <form onSubmit={handleSubmit}>\n                <input \n                    placeholder=\"Search\"\n                    name=\"search\"\n                    value={formData}\n                    onChange={handleChange}\n                />\n                <button type=\"submit\">Submit</button>\n            </form>\n        </div>\n    )\n}\n\nexport default Search;","import React, {useState, useEffect, useContext} from \"react\";\nimport JobsCardList from \"./JobsCardList\";\nimport JoblyApi from \"../api\";\nimport Search from \"../Search\"\nimport UserContext from \"../user/UserContext\";\n\nconst Jobs = () => {\n    const [jobs, setJobs] = useState(null);\n    const [allJobs, setAllJobs] = useState(null);\n    const {appliedJobs} = useContext(UserContext);\n    const [filtered, setFiltered] = useState(false);\n\n    useEffect(function getJobs(){\n        searchJobs();\n    }, []);\n\n    const searchJobs = async (title) => {\n        let res = await JoblyApi.getJobs(title);\n        setJobs(res);\n        setAllJobs(res);\n    }\n\n    if (!jobs) return <p className=\"centerp\">Loading...</p>\n\n    const filterJobs = () => {\n        let res = jobs.filter(({id}) => appliedJobs.has(id));\n        setJobs(res);\n        setFiltered(true);\n    }\n\n    const unFilterJobs = () => {\n        setJobs(allJobs);\n        setFiltered(false);\n    }\n\n    return (\n        <div className=\"Jobs\">\n            <Search search={searchJobs}/>\n            <p className=\"centerp\">Filter applied jobs: \n                {filtered ?\n                    <span onClick={unFilterJobs} checked className=\"Jobs-on\">ON</span>\n                :\n                    <span onClick={filterJobs} className=\"Jobs-off\">OFF</span>\n                }\n            </p>\n            {jobs.length ?\n                <JobsCardList jobs={jobs}/>\n            :\n                <p className=\"centerp\">Sorry, no result found</p>\n            }\n        </div>\n    )\n}\n\nexport default Jobs;","import React, {useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport \"./user.css\";\n\nconst LoginForm = ({login}) => {\n    const [formData, setFormData] = useState({username:\"\", password: \"\"});\n    const history = useHistory();\n\n    const handleChange = (e) => {\n        const {name, value} = e.target;\n        setFormData(i => ({...i, [name]:value}));\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        let res = await login(formData);\n        if (res.success) {\n            history.push(\"/\");\n        } else {}\n    }\n\n    return (\n        <div className=\"LoginForm\">\n            <h1>Login</h1>\n            <form className=\"LoginForm-form\" onSubmit={handleSubmit}>\n                <label htmlFor=\"username\">Username</label>\n                <input\n                    name=\"username\"\n                    value={formData.username}\n                    onChange={handleChange}\n                    required\n                />\n                <label htmlFor=\"password\">Password</label>\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    value={formData.password}\n                    onChange={handleChange}\n                    required\n                />\n                <button type=\"submit\">Submit</button>\n            </form>\n        </div>\n    )\n}\n\nexport default LoginForm;","import React, {useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport \"./user.css\";\n\nconst SignupForm = ({signup}) => {\n    const [formData, setFormData] = useState({username:\"\", password: \"\", firstName:\"\", lastName:\"\", email:\"\"});\n    const history = useHistory();\n\n    const handleChange = (e) => {\n        const {name, value} = e.target;\n        setFormData(i => ({...i, [name]:value}));\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        let res = await signup(formData);\n        if (res.success) {\n            history.push(\"/companies\");\n        } else {}\n    }\n\n    return (\n        <div className=\"SignupForm\">\n            <h1>Signup</h1>\n            <form className=\"SignupForm-form\" onSubmit={handleSubmit}>\n                <label htmlFor=\"username\">Username</label>\n                <input\n                    name=\"username\"\n                    value={formData.username}\n                    onChange={handleChange}\n                    required\n                />\n                <label htmlFor=\"password\">Password</label>\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    value={formData.password}\n                    onChange={handleChange}\n                    required\n                />\n                <label htmlFor=\"firstName\">First Name</label>\n                <input\n                    type=\"firstName\"\n                    name=\"firstName\"\n                    value={formData.firstName}\n                    onChange={handleChange}\n                    required\n                />\n                <label htmlFor=\"lastName\">Last Name</label>\n                <input\n                    type=\"lastName\"\n                    name=\"lastName\"\n                    value={formData.lastName}\n                    onChange={handleChange}\n                    required\n                />\n                <label htmlFor=\"email\">Email</label>\n                <input\n                    type=\"email\"\n                    name=\"email\"\n                    value={formData.email}\n                    onChange={handleChange}\n                    required\n                />\n                <button onSubmit={handleSubmit}>Signup</button>\n            </form>\n        </div>\n    )\n}\n\nexport default SignupForm;","import React, {useState, useContext} from \"react\";\nimport UserContext from \"./UserContext\";\nimport JoblyApi from \"../api\";\n\nconst ProfileForm = () => {\n    const {curUser, setCurUser} = useContext(UserContext);\n    const [formData, setFormData] = useState({email: curUser.email, firstName: curUser.firstName, lastName: curUser.lastName, password: \"\"});\n    const [changed, setChanged] = useState(false);\n\n    const handleChange = (e) => {\n        const {name, value} = e.target;\n        setFormData(i => ({...i, [name]:value}));\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setChanged(false);\n        let res;\n        try {\n            res = await JoblyApi.saveUser(curUser.username, formData);\n            setChanged(true);\n        } catch (err) {\n            return;\n        }\n        setFormData(f => ({...f, password:\"\"}));\n        setCurUser(res);\n    }\n\n    return (\n        <div className=\"ProfileForm\">\n            <h1>{curUser.username}(s) profile</h1>\n            <form className=\"ProfileForm-form\" onSubmit={handleSubmit}>\n                <label htmlFor=\"firstName\">First Name</label>\n                <input\n                    type=\"firstName\"\n                    name=\"firstName\"\n                    value={formData.firstName}\n                    onChange={handleChange}\n                />\n                <label htmlFor=\"lastName\">Last Name</label>\n                <input\n                    type=\"lastName\"\n                    name=\"lastName\"\n                    value={formData.lastName}\n                    onChange={handleChange}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <input\n                    type=\"email\"\n                    name=\"email\"\n                    value={formData.email}\n                    onChange={handleChange}\n                />\n                <label htmlFor=\"password\">Confirm password to make changes</label>\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    value={formData.password}\n                    onChange={handleChange}\n                />\n                {changed ?\n                    <button onSubmit={handleSubmit} className=\"saved-btn\">Changes Saved!</button>\n                :\n                    <button onSubmit={handleSubmit}>Save Changes</button>\n                }\n            </form>\n        </div>\n    )\n}\n\nexport default ProfileForm;","import React, {useContext} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport UserContext from \"./user/UserContext\";\nimport \"./homepage.css\"\n\nconst HomePage = () => {\n    const {curUser} = useContext(UserContext);\n    return (\n        <div className=\"HomePage\">\n            <h1>Jobly</h1>\n            <h3>All the jobs in one, convenient place.</h3>\n            {curUser ?\n                <h2>Welcome back, {curUser.firstName || curUser.username}!</h2>\n            :\n                <div>\n                    <Link to=\"/login\"><button>Login</button></Link>\n                    <Link to=\"/Signup\"><button>Signup</button></Link>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default HomePage;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport \"./company.css\";\n\nconst CompanyCard = ({name, description, logoUrl, handle}) => {\n    return (\n        <Link className=\"CompanyCard\" to={`/companies/${handle}`}>\n            <div className=\"CompanyCard-card\">\n                <h4>{name}</h4>\n                {logoUrl && <img src={logoUrl} alt={name}/>}\n                <p>{description}</p>\n            </div>\n        </Link>\n    )\n}\n\nexport default CompanyCard;","import React, {useState, useEffect} from \"react\";\nimport JoblyApi from \"../api\";\nimport CompanyCard from \"./CompanyCard\";\nimport \"./company.css\";\nimport Search from \"../Search\"\n\nconst Companies = () => {\n    const [companies, setCompanies] = useState(null);\n    \n    useEffect(function getCompanies(){\n        searchCompanies();\n    }, []);\n\n    const searchCompanies = async (name) => {\n        let res = await JoblyApi.getCompanies(name);\n        setCompanies(res);\n    }\n\n    if (!companies) return <p className=\"centerp\">Loading...</p>\n\n    return (\n        <div className=\"CompanyList\">\n            <Search search={searchCompanies}/>\n            {companies.length ?\n                <div className=\"CompanyList-list\">\n                    {companies.map(c => (\n                        <CompanyCard \n                            key={c.handle}\n                            handle={c.handle}\n                            name={c.name}\n                            description={c.description}\n                            logoUrl={c.logoUrl}\n                        />\n                    ))}\n                </div>\n            :\n                <p className=\"centerp\">Sorry, no results found.</p>\n            }\n        </div>\n    )\n}\n\nexport default Companies;","import React, {useState, useEffect} from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport JobsCardList from \"../job/JobsCardList\";\nimport JoblyApi from \"../api\";\nimport \"./company.css\";\n\nconst CompanyDetail = () => {\n    const {handle} = useParams();\n    const [company, setCompany] = useState(null);\n\n    useEffect(function getCompanyDetail() {\n        async function getDetails(){\n            setCompany(await JoblyApi.getCompany(handle));\n        }\n        getDetails();\n    }, [handle]);\n\n    if (!company) return <p>Loading...</p>\n\n    return (\n        <div className=\"CompanyDetail\">\n            <h2>{company.name}</h2>\n            <p>{company.description}</p>\n            <JobsCardList jobs={company.jobs}/>\n        </div>\n    )\n}\n\nexport default CompanyDetail;","import React, {useContext} from \"react\";\nimport {Route, Redirect} from \"react-router-dom\";\nimport UserContext from \"./user/UserContext\";\n\nconst ProtectedRoute = ({exact, path, children}) => {\n    const {curUser} = useContext(UserContext);\n\n    if (!curUser) return <Redirect to=\"/login\" />\n\n    return (\n        <Route exact={exact} path={path}>\n            {children}\n        </Route>\n    )\n}\n\nexport default ProtectedRoute;","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Jobs from \"./job/Jobs\";\nimport LoginForm from \"./user/LoginForm\";\nimport SignupForm from \"./user/SignupForm\";\nimport ProfileForm from \"./user/ProfileForm\";\nimport HomePage from \"./HomePage\";\nimport CompanyList from \"./company/CompanyList\";\nimport CompanyDetail from \"./company/CompanyDetail\";\nimport ProtectedRoute from \"./ProtectedRoute\";\n\nconst Routes = ({signup, login}) => {\n    return (\n        <div>\n            <main>\n                <Switch>\n                    <Route exact path=\"/\">\n                        <HomePage/>\n                    </Route>\n                    <ProtectedRoute exact path=\"/companies\">\n                        <CompanyList/>\n                    </ProtectedRoute>        \n                    <ProtectedRoute exact path=\"/companies/:handle\">\n                        <CompanyDetail/>\n                    </ProtectedRoute>\n                    <ProtectedRoute exact path=\"/jobs\">\n                        <Jobs/>\n                    </ProtectedRoute>\n                    <Route exact path=\"/login\">\n                        <LoginForm login={login}/>\n                    </Route>\n                    <Route exact path=\"/signup\">\n                        <SignupForm signup={signup} />\n                    </Route>\n                    <ProtectedRoute exact path=\"/profile\">\n                        <ProfileForm/>\n                    </ProtectedRoute>\n                    <Redirect to=\"/\" />\n                </Switch>\n            </main>\n        </div>\n    )\n}\n\nexport default Routes;","import React, { useContext } from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport UserContext from \"./user/UserContext\";\nimport \"./navigation.css\"\n\nconst Navigation = ({logout}) => {\n    const { curUser } = useContext(UserContext);\n\n    const loggedIn = () => {\n        return(\n            <div className=\"Navigation\">\n                <NavLink exact to=\"/\">\n                    <span>Jobly</span>\n                </NavLink>\n                <NavLink exact to=\"/companies\">\n                    <span>Companies</span>\n                </NavLink>\n                <NavLink exact to=\"/jobs\">\n                    <span>Jobs</span>\n                </NavLink>\n                <NavLink exact to=\"/profile\">\n                    <span>Profile</span>\n                </NavLink>\n                <Link to=\"/\" onClick={logout}>\n                    Logout\n                </Link>\n            </div>\n        );\n    }\n\n    const notLoggedIn = () => {\n        return (\n            <div className=\"Navigation\">\n                <NavLink exact to=\"/\">\n                    <span>Jobly</span>\n                </NavLink>\n                <NavLink exact to=\"/login\">\n                    <span>Login</span>\n                </NavLink>\n                <NavLink exact to=\"/signup\">\n                    <span>Signup</span>\n                </NavLink>\n            </div>\n        );\n    }\n\n    return (\n        <>\n            {curUser ? loggedIn() : notLoggedIn()}\n        </>\n    )\n}\n\nexport default Navigation;","import { useState, useEffect } from \"react\";\n\nconst useLocalStorage = (key, initVal = null) => {\n    const value = localStorage.getItem(key) || initVal;\n    const [item, setItem] = useState(value);\n    useEffect(function setLocalStorage(){\n        item === null ?\n            localStorage.removeItem(key) :\n            localStorage.setItem(key, item);\n    }, [key, item]);\n    return [item, setItem];\n}\n\nexport default useLocalStorage;","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport UserContext from \"./user/UserContext\";\nimport Routes from \"./Routes\";\nimport Navigation from \"./Navigation\";\nimport JoblyApi from \"./api\";\nimport jwt from \"jsonwebtoken\";\nimport useLocalStorage from \"./useLocalStorage\";\nexport const token_storage = \"jobly-token\";\n\nfunction App() {\n  const [token, setToken] = useLocalStorage(token_storage);\n  const [curUser, setCurUser] = useState(null);\n  const [appliedJobs, setAppliedJobs] = useState(new Set([]));\n  const [userLoaded, setUserLoaded] = useState(false);\n\n  useEffect(function loadUser(){\n    async function getCurUser(){\n      if (token) {\n        try {\n          let {username} = jwt.decode(token);\n          JoblyApi.token = token;\n          let resUser = await JoblyApi.getUser(username);\n          setCurUser(resUser);\n          setAppliedJobs(new Set(resUser.applications));\n        } catch(err) {\n          setCurUser(null)\n        }\n      }\n      setUserLoaded(true);\n    }\n    setUserLoaded(false);\n    getCurUser();\n  }, [token])\n\n  const login = async (inputData) => {\n    try {\n      let token = await JoblyApi.login(inputData);\n      setToken(token);\n      return { success: true};\n    } catch (err) {\n      return { success: false };\n    }\n  }\n\n  const signup = async (inputData) => {\n    try {\n      let token = await JoblyApi.signup(inputData);\n      setToken(token);\n      return { success: true};\n    } catch (err) {\n      return { success: false };\n    }\n  }\n\n  const logout = () => {\n    setCurUser(null);\n    setToken(null);\n  }\n\n  const hasAppliedToJob = (id) => {\n    return appliedJobs.has(id);\n  }\n\n  const applyToJob = (id) => {\n    if(hasAppliedToJob(id)) return;\n    JoblyApi.applyToJob(curUser.username, id);\n    setAppliedJobs(new Set([...appliedJobs, id]));\n  }\n\n  if (!userLoaded) return <p className=\"centerp\">Loading...</p>\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <UserContext.Provider value={{ curUser, hasAppliedToJob, applyToJob, setCurUser, appliedJobs }}>\n          <Navigation logout={logout}/>\n          <Routes login={login} signup={signup}/>\n        </UserContext.Provider>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}